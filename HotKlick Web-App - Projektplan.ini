# 🎯 HotKlick Web-App - Projektplan

## 📁 Projektstruktur

```
hotklick-web/
├── index.html              # Haupt-HTML (PWA-Shell)
├── manifest.json           # PWA Manifest
├── sw.js                   # Service Worker (Offline)
├── css/
│   ├── main.css           # Haupt-Stylesheet
│   ├── editor.css         # Editor-spezifische Styles
│   └── practice.css       # Übungsmodus-Styles
├── js/
│   ├── app.js             # App-Initialisierung
│   ├── router.js          # Screen-Navigation
│   ├── db.js              # IndexedDB Handler
│   ├── canvas/
│   │   ├── canvas-manager.js    # Canvas-Verwaltung
│   │   ├── hotspot-renderer.js  # Hotspot-Zeichnung
│   │   └── interaction.js       # Click/Touch-Events
│   ├── audio/
│   │   ├── recorder.js          # Audio-Aufnahme (MediaRecorder API)
│   │   └── player.js            # Audio-Wiedergabe
│   ├── modes/
│   │   ├── editor.js            # Editiermodus-Logik
│   │   ├── practice.js          # Übungsmodus-Logik
│   │   └── deepening.js         # Vertiefungsmodus-Logik
│   ├── export/
│   │   ├── zip-export.js        # ZIP-Export (JSZip)
│   │   └── zip-import.js        # ZIP-Import
│   └── utils/
│       ├── storage.js           # Hilfsfunktionen für Storage
│       └── ui-helpers.js        # UI-Komponenten
├── assets/
│   ├── icons/              # PWA Icons
│   └── sounds/             # UI-Sounds (optional)
└── README.md
```

---

## 🎯 Feature-Implementierung (Phasen)

### **Phase 1: Core Foundation** (Woche 1)
- ✅ Projekt-Setup mit PWA-Basics
- ✅ IndexedDB Datenbankschema
- ✅ Router für Screen-Navigation
- ✅ Basis-UI mit Responsive Design
- ✅ Bildupload und Canvas-Initialisierung

### **Phase 2: Editor-Modus** (Woche 2)
- ✅ Hotspot-Erstellung (Click/Touch)
- ✅ Hotspot-Löschung
- ✅ Text-Dialog für Hotspots
- ✅ Audio-Aufnahme Integration (MediaRecorder API)
- ✅ Farbcodierung (Rot/Gelb/Blau/Grün)
- ✅ Übungsname-Verwaltung

### **Phase 3: Übungsmodus** (Woche 3)
- ✅ Hotspot-Abfrage Interface
- ✅ Text-Anzeige bei Click
- ✅ Audio-Wiedergabe
- ✅ Fortschritts-Tracking

### **Phase 4: Vertiefungsmodus** (Woche 4)
- ✅ Zufalls-Fragen-Generator
- ✅ Quiz-Interface
- ✅ Statistik-Tracking

### **Phase 5: Import/Export** (Woche 5)
- ✅ ZIP-Export (Bild + Daten + Audio)
- ✅ ZIP-Import mit Validierung
- ✅ Share-Funktionalität

### **Phase 6: PWA & Polish** (Woche 6)
- ✅ Service Worker für Offline
- ✅ Installierbarkeit
- ✅ Performance-Optimierung
- ✅ Testing auf verschiedenen Geräten

---

## 🔧 Technologie-Stack

### **Core Technologies**
- **HTML5 Canvas** - Hotspot-Rendering
- **Vanilla JavaScript (ES6+)** - Keine Frameworks
- **CSS Grid + Flexbox** - Responsive Layout
- **IndexedDB** - Lokale Datenspeicherung

### **Browser APIs**
- **MediaRecorder API** - Audio-Aufnahme
- **Web Audio API** - Audio-Wiedergabe
- **File System Access API** - Datei-Upload/Download
- **Service Worker API** - Offline-Funktionalität

### **Libraries (minimal)**
- **JSZip** (CDN) - ZIP-Erstellung/Extraktion
- **FileSaver.js** (CDN) - Download-Handling

---

## 📊 Datenbank-Schema (IndexedDB)

### **Object Stores**

#### 1. **exercises**
```javascript
{
  id: "uuid",
  name: "Anatomie Herz",
  imageName: "heart.jpg",
  imageData: Blob,
  createdAt: timestamp,
  updatedAt: timestamp
}
```

#### 2. **hotspots**
```javascript
{
  id: "uuid",
  exerciseId: "uuid",
  x: 250.5,
  y: 180.3,
  radius: 20,
  label: "A1",
  text: "Rechte Herzkammer",
  audioBlob: Blob | null,
  hasAudio: boolean,
  hasText: boolean
}
```

#### 3. **progress** (für Übungsmodus)
```javascript
{
  id: "uuid",
  exerciseId: "uuid",
  hotspotId: "uuid",
  attempts: 3,
  correct: 2,
  lastAttempt: timestamp
}
```

---

## 🎨 UI/UX Design-Prinzipien

### **Responsive Breakpoints**
- **Desktop**: > 1024px - Sidebar + Canvas nebeneinander
- **Tablet**: 768px - 1024px - Stacked Layout
- **Mobile**: < 768px - Full-Screen Canvas

### **Farbschema**
```css
--primary: #2196F3;        /* Material Blue */
--secondary: #FF9800;      /* Orange */
--success: #4CAF50;        /* Green */
--danger: #F44336;         /* Red */
--warning: #FFC107;        /* Yellow */
--dark: #212121;
--light: #F5F5F5;
```

### **Touch-Optimierung**
- Mindestens 44x44px Tap-Targets
- Swipe-Gesten für Navigation
- Long-Press für Kontextmenüs

---

## 🚀 Progressive Web App Features

### **manifest.json**
```json
{
  "name": "HotKlick",
  "short_name": "HotKlick",
  "description": "Interaktive Lern-App mit Hotspots",
  "start_url": "/",
  "display": "standalone",
  "theme_color": "#2196F3",
  "background_color": "#FFFFFF",
  "icons": [...]
}
```

### **Offline-Strategie**
- **Cache-First**: App-Shell (HTML/CSS/JS)
- **Network-First**: Übungsdaten (mit Fallback)
- **Cache-Only**: Hochgeladene Bilder

---

## ✅ Nächste Schritte

1. **Sofort starten?** Ich erstelle die Basis-HTML-Datei
2. **Schrittweise?** Wir bauen Phase für Phase auf
3. **Spezifischer Fokus?** Du sagst, welcher Teil zuerst

**Deine Wahl! Womit sollen wir beginnen?** 🎯